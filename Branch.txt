git Branch 사용 방법

Branch: 서로 다른 환경에서 서로 다른 목적으로 개발할 수 있도록 함

Master Branch: Merge가 되기전까지
항상 안정화되도록 만들어야함

통합 브랜치: 배포가 가능한 수준의 브랜치로 일반적으로 마스터 브랜치
토픽 브랜치: 특정한 기능을 위해 만들어진 브랜치로 일반적으로 마스터 브랜치
이외의 다른 브랜치

1. git branch [브랜치 이름]: 브랜치 생성

2. git checkout [브랜치 이름]:  다른 브랜치로 접속

3.git add -> 수정된 파일 추가
4. git commit - m "주석"
5. git checkout  master: 브랜치 변경	
6. git merge [브랜치 이름] -> 기존꺼랑 합치기
7. git push -> Github에 업로드

		&&
git push origin develop: add, commit, push를 통해서 자신의 github repository (origin)에 수정사항을 반영

git branch -d [브랜치 이름]: 로컬 브런치 삭제

git checkout -t [원격저장소 branch 이름]: 원격저장소에 있는 branch를 가져옴
git push origin --delete  {브랜치명}: 원격저장소에 올라가 있는 브랜치를 삭제

git push --set-upstream origin [브랜치 이름]: branch에 push 권한 주기

git clone <repository 주소>: 기존에 올려두었던 github의 프로젝트를 clone 하여 가져옵니다.
